PATH=$PATH:/home/kali/.local/bin

alias my_ffuf="~/.local/bin/my_ffuf.sh"

auto() {
        echo "changing keyboard and display configuration"
        setxkbmap -layout 'es,es' && xrandr --size 1920x1200
}

burp() {
#        LD_PRELOAD=/home/kali/burp/fake-user.so java -jar ls -t /home/kali/burp/burpsuite_pro_v2022.8.3.jar | head -1
        LD_PRELOAD=/home/kali/burp/fake-user.so java -jar `ls -t /home/kali/burp/burpsuite_pro_*.jar | head -1`
}


alias gohtb="cd ~/htb/"
alias govpn="cd ~/vpn/"


function globalv(){
        cp ~/.zshrc ~/zshrc_bck
        echo "sed -i 's/^$1=.*//g' ~/.zshrc" | bash
        echo $1=$2 >> ~/.zshrc
        source ~/.zshrc
}

myip() {
        curl ifconfig.me
}


wakeonlan() {
        MAC=18:c0:4d:98:00:9fç
        echo -e $(echo $(printf 'f%.0s' {1..12}; printf "$(echo $MAC | sed 's/://g')%.0s" {1..16}) | sed -e 's/../\\x&/g') | nc -w1 -u -b 255.255.255.255 4000
}


#Hace un backup de un fichero en el mismo directorio como primer parámetro la ruta y como segundo el nombre del fichero
function makeBackUp() {
        date=$(date +"%Y-%m-%d-%h")
        zip -r $1/$(echo $date)_$(echo $2).zip $2
}


#Para eliminar ficheros de forma no recuperable
function rmk(){
    scrub -p dod $1
    shred -zun 10 -v $1
}



# Hacking shortcuts
alias smbServer='sudo impacket-smbserver smbFolder $(pwd) -smb2support'


function smb_null_session() {
        echo "[*] crackmapexec:"
        echo "crackmapexec smb $ipv"
        echo '[*] smbmap:'
        echo 'smbmap -u "" -p "" -P 445 -H $ipv'
        echo 'smbmap -u "guest" -p "" -P 445 -H $ipv'
        echo 'smbmap -H $ipv -u 0xdf'
        echo
        echo '[*] smbclient:'
        echo 'smbclient -N -L \\$ipv'
        echo 'smbclient -L $ipv -U "$user%$pass"'
        echo 'smbclient //$ipv/SYSVOL -U "$user%$pass"'
        echo '  smb: \> recurse ON'
        echo '  smb: \> prompt OFF'
        echo '  smb: \> mget *'
        echo
        echo "[*] Revisar metadatos de los ficheros!"
        echo "exiftool"
        echo
        echo '[*] rpcclient:'
        echo 'rpcclient -U "" $ipv -N'
        echo 'rpcclient $> enomdomusers'
        echo 'rpcclient $> enomdomgroups'
        echo 'rpcclient $> queryuser 0x1f4'
        echo 'rpcclient $> querydispinfo'
}

function ftp_anon() {
        echo "[*] Checker:"
        echo "nmap -sT -Pn -p21 --script='ftp-anon' $ipv" 
        echo
        echo "[*] Descargar el contenido en local"
        echo "wget -r ftp://anonymous:anonymous@$ipv"
        echo "ftp> prompt"
        echo "ftp> mget *"
        echo
        echo "[*] Revisar metadatos de los ficheros!"
        echo "exiftool"
}

function mkt() {
        mkdir {nmap,content,exploits,scripts,fuzz,tmp,privesc}
}


#crackmapexec
function crackmapexec_map() {
    #TODO
    # Revisar si se pueden pasar ficheros como parámetros

    # En caso de no tener 3 parámetros en la llamada:
    if [ $# -ne 3 ]; then
        echo "Uso: crackmapexec_map <ipv> <usuario> <contraseña>"
        echo "Ejemplo: crackmapexec_map 10.10.10.77 tom '1ts-mag1c!!!'"
        return 1
    fi
    # Comando para crackmapexec y las credenciales
    crackmapexec_cmd="crackmapexec"
    ipv=$1
    username=$2
    password=$3
    password=$(echo $password | sed 's/!/\\!/g')

    # Iniciar una nueva sesión de tmux llamada "crackmapexec"
    tmux new-session -d -s crackmapexec

    # Dividir la ventana en 7 paneles
    tmux split-window -t crackmapexec:0 -h
    tmux split-window -t crackmapexec:0 -h
    tmux split-window -t crackmapexec:0 -h
    tmux split-window -t crackmapexec:0 -h
    tmux split-window -t crackmapexec:0 -h
    tmux split-window -t crackmapexec:0 -h

    # Ejecutar el comando crackmapexec en cada panel para cada servicio
    tmux send-keys -t crackmapexec:0.0 "$crackmapexec_cmd ftp $ipv -u \"$username\" -p \"$password\"" Enter
    tmux send-keys -t crackmapexec:0.1 "$crackmapexec_cmd ssh $ipv -u \"$username\" -p \"$password\"" Enter
    tmux send-keys -t crackmapexec:0.2 "$crackmapexec_cmd rdp $ipv -u \"$username\" -p \"$password\"" Enter
    tmux send-keys -t crackmapexec:0.3 "$crackmapexec_cmd smb $ipv -u \"$username\" -p \"$password\"" Enter
    tmux send-keys -t crackmapexec:0.4 "$crackmapexec_cmd ldap $ipv -u \"$username\" -p \"$password\"" Enter
    tmux send-keys -t crackmapexec:0.5 "$crackmapexec_cmd winrm $ipv -u \"$username\" -p \"$password\"" Enter
    tmux send-keys -t crackmapexec:0.6 "$crackmapexec_cmd mssql $ipv -u \"$username\" -p \"$password\"" Enter

    # Seleccionar el primer panel
    tmux select-pane -t crackmapexec:0.0

    # Unir todos los paneles
    tmux select-layout -t crackmapexec:0 tiled

    # Attach a la sesión de tmux
    tmux attach-session -t crackmapexec
}

#################################################################################################3
#Infrastructure
#Just pass as paremeter a file with the different domains you need and this add http and https at the begin
function addhttp(){
    rm -f $(echo $1)_http
    while read -r line;
    do
    echo $line | sed 's/^/http:\/\//g' >> $(echo $1)_http
    echo $line | sed 's/^/https:\/\//g' >> $(echo $1)_http
    done < $1
}


#nmap scans
## falta añadir UDP!!!
function nmap_scans(){
    # Comprobamos que se reciben exactamente dos parámetros
    if [ "$#" -ne 2 ]; then
        echo "Debes proporcionar exactamente dos parámetros."
        echo "Uso: $0 [dirección_IP] [min_rate]"
    else
        IP_ADDRESS=$1
        MIN_RATE=$2
        nmap -sT -Pn -p- --min-rate=$MIN_RATE -n -oN allPorts -vvv $IP_ADDRESS
   
        NAME=$(echo $ipv | sed 's/\//_/g')
        PORTS=$(cat allPorts | grep -oP '\d{1,5}/tcp' | sed 's/\/tcp//g' | xargs | tr " " ",")
        nmap -sT -sCV -Pn -p$PORTS --min-rate=$MIN_RATE -n -oN $NAME $IP_ADDRESS


     fi
}

